// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package graph_mining.in_memory;

message PageRankConfig {
  // Probability that a random walk continues at the current node. Must be in
  // the range [0, 1).
  optional double damping_factor = 1 [default = 0.85];

  // Max number of iterations to run. Must be nonnegative. The algorithm may run
  // fewer iterations if convergence is reached earlier (see `approx_precision`
  // below).
  optional int32 num_iterations = 2 [default = 2147483647];  // INT_MAX.

  // Approximation precision threshold for the entire graph. Must be
  // nonnegative. The algorithm is considered to have converged (and is stopped)
  // once the L1 difference between the approximate vectors obtained in two
  // consecutive iterations is smaller than the approximation precision
  // threshold times the number of nodes in the graph.
  optional double approx_precision = 3 [default = 1e-6];
}
